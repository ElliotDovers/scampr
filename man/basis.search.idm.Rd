% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basis.search.idm.R
\name{basis.search.idm}
\alias{basis.search.idm}
\title{Search algorithm for simple 2D basis functions configurations on scampr IDMs}
\usage{
basis.search.idm(
  object,
  search.rate = 1,
  return.model = FALSE,
  max.basis.functions,
  radius.type = c("diag", "limiting"),
  bf.matrix.type = c("sparse", "dense"),
  domain.data
)
}
\arguments{
\item{object}{a scampr model: object of class 'scampr' that provides the framework for the search algorithm. Recommended that an IPP model of the appropriate type is used.}

\item{search.rate}{an integer determining the rate of increasingly dense basis function configurations trialled. Default is \code{search.rate = 1}, however this can be increased to reduce computation time (at the expense of how fine-scale the search will be).}

\item{return.model}{a logical indicating whether to return the model with the lowest BIC found through the search. Default is \code{FALSE}, meaning the full search results are returned.}

\item{max.basis.functions}{Optional. An integer describing a rough upper limit to the number of basis functions to search. Defaults to half the number of presences in the data sets.}

\item{radius.type}{a character string describing the type of radius length to use. One of 'diag' = diagonal dist. between nodes or 'limiting' = sqrt(Domain Area)/log(k).}

\item{bf.matrix.type}{a character string, one of 'sparse' or 'dense' indicating whether to use sparse or dense matrix computations for the basis functions created.}

\item{domain.data}{Optional. A data frame of columns 'coord.names' that contains at least the extremities of the domain of interest. Useful to ensure the same basis function configurations are created by 'simple_basis' if comparing to various searches.}
}
\value{
a data.frame with columns including- 'nodes': number used in scampr::simple_basis to create basis configuration. 'k': the number of basis functions. 'loglik': the fitting marginal log-likelihood. 'aic': the corresponding AIC. Optionally, 'predicted_cll_po': the conditional (on the latent field) Presence-only likelihood. 'predicted_cll_pa': the conditional (on the latent field) Presence/Absence likelihood. 'roc_auc': Area under the ROC curve on the Presence/Absence data. Optional columns are the results from a cross-validation described by 'po.fold.id' and/or 'pa.fold.id'. (_va or _lp subscript for approx. type if both are calculated).
}
\description{
This function takes in a scampr model and calculates likelihoods and BIC for the list of basis functions supplied. If none are supplied then the algorithm fits increasingly dense regular grids of basis functions (of the type created by scampr::simple_basis). The algorithm starts with an IPP (i.e. zero basis functions) and increases to <= 'max.basis.functions'. If 'po.fold.id' and/or 'pa.fold.id' are supplied then the function will perform a k-fold hold-one-out cross validation to calculate out-of-sample likelihoods (conditional on the latent field).
}
\examples{
#' # Get the gorilla nesting data
dat <- gorillas

# Standardise the elevation covariate
dat$elev.std <- scale(dat$elevation)

# Fit an IPP model to the point pattern
m.ipp <- scampr(pres ~ elev.std, data = dat, model.type = "ipp")
 \dontrun{
# Search through an increasingly dense regular grid of basis functions
res <- simple_basis_search(m.ipp)
}
}
