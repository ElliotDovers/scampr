% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.scampr.R
\name{predict.scampr}
\alias{predict.scampr}
\title{Predict function for objects of class 'scampr'}
\usage{
\method{predict}{scampr}(
  object,
  ...,
  newdata,
  type = c("link", "response"),
  dens = c("posterior", "prior"),
  data.component = c("presence-only", "presence-absence"),
  exclude.terms
)
}
\arguments{
\item{object}{a scampr model object}

\item{...}{NA}

\item{newdata}{a data frame of point locations to predict over as well as predictors involved in the model}

\item{type}{a character string , one of 'link' or 'response', indicating the type of prediction to be returned. Either log-intensity or intensity respectively.}

\item{dens}{a character string, one of 'posterior' or 'prior', indicating the probability density of the random effects to take the expectation from.}

\item{data.component}{a character string, one of 'presence-only' or 'presence-absence', indicating the data.component to be estimated. Only available for combined data models.}

\item{exclude.terms}{Optionally, a character string (or vector of character strings) specifying model terms to be excluded from the predictions. This is useful for removing predictors that were used only to account for bias in the presence-only data.}
}
\value{
a numeric vector of length newdata (or length of fitted data) containing the predictions.
}
\description{
Functions the same as predict.glm with additional functionality. Can select whether predictions come from the realised latent field (dens = "posterior") or unrealised (dens = "prior") - depending on whether a user wants to make data specific predictions or be more broad. Particular to combined data models the user can specify whether to return the rate at which presence records occur (data.component = "presence-only") or the underlying abundance rate (data.component = "presence-absence").
}
\examples{
# Get the flora data for one of the species
dat_po <- flora$po$sp1
dat_pa <- flora$pa

# Attach the quadrature to the PO data
dat_po <- rbind.data.frame(dat_po, flora$quad)

# Set a train and test set
train_po <- dat_po[dat_po$x <= mean(c(dat_po$x, dat_pa$x)), ]
test_po <- dat_po[dat_po$x > mean(c(dat_po$x, dat_pa$x)), ]
train_pa <- dat_pa[dat_pa$x <= mean(c(dat_po$x, dat_pa$x)), ]
test_pa <- dat_pa[dat_pa$x > mean(c(dat_po$x, dat_pa$x)), ]

# Set up a simple 2D grid of basis functions to fit a LGCP model to the data
bfs <- simple_basis(nodes.on.long.edge = 9, data = dat_po)

# Fit an IPP model to the point pattern
m.ipp <- scampr(pres ~ MNT + D.Main, train_po, model.type = "ipp")

# Fit a combined data model
m.comb <- scampr(pres ~ MNT + D.Main, dat_po, sp1 ~ MNT,
dat_pa, model.type = "ipp")

# Fit presence/absence model
m.pa <- scampr(pa.formula = sp1 ~ MNT, pa.data = dat_pa, model.type = "ipp")

\dontrun{
# Fit a LGCP model to the point pattern
m.lgcp_va <- scampr(pres ~ MNT + D.Main, dat_po, simple.basis = bfs)

predict(m.ipp, test_po)
predict(m.comb, test_po, data.component = "presence-only")
predict(m.comb, test_pa, data.component = "presence-absence")
predict(m.pa, test_pa)
predict(m.lgcp_va, test_po)
predict(m.lgcp_va, test_po, dens = "prior")
}
}
