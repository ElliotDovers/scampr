% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basis.search.pa.R
\name{basis.search.pa}
\alias{basis.search.pa}
\title{Search algorithm for simple 2D basis functions configurations on scampr PA models}
\usage{
basis.search.pa(
  object,
  metric = c("ll", "aic", "bic"),
  return.model = TRUE,
  max.basis.functions,
  radius.type = c("diag", "limiting"),
  bf.matrix.type = c("sparse", "dense"),
  domain.data,
  start.nodes = 4,
  search.rate = 1,
  metric.tol = 0,
  lag = 3
)
}
\arguments{
\item{object}{a scampr model: object of class 'scampr' that provides the framework for the search algorithm. It is recommended that the model does not include spatial random effects to save the computational burden of fitting such a model first.}

\item{metric}{a character string describing the metric upon which to choose the optimal basis function configuration. One of 'll' (log-Likelihood), 'aic' (Akaike Information Criterion), 'bic' (Bayesian Information Criterion).}

\item{return.model}{a logical indicating whether to return the model with optimal basis function configuration according to \code{metric}. Default is \code{TRUE}, meaning search results are returned are attached to the model as an attribute, i.e. accessible via \code{attr(., "search.res")}.}

\item{max.basis.functions}{Optional. An integer describing a rough upper limit to the number of basis functions to search. Defaults to half the number of presences in the data sets.}

\item{radius.type}{a character string describing the type of radius length to use. One of 'diag' = diagonal dist. between nodes or 'limiting' = sqrt(Domain Area)/log(k).}

\item{bf.matrix.type}{a character string, one of 'sparse' or 'dense' indicating whether to use sparse or dense matrix computations for the basis functions created.}

\item{domain.data}{Optional. A data frame of columns 'coord.names' that contains at least the extremities of the domain of interest. Useful to ensure the same basis function configurations are created by 'simple_basis' if comparing to various searches.}

\item{start.nodes}{an integer determining the effective number of basis functions to start the search from (\code{k = start.nodes^2} on a square domain). Default is \code{start.nodes = 4}, however this can be increased so that the search is started from a denser basis function configuration (this will likely increase computation time).}

\item{search.rate}{an integer determining the rate of increasingly dense basis function configurations trialled. Default is \code{search.rate = 1}, however this can be increased to reduce computation time (at the expense of how fine-scale the search will be).}

\item{metric.tol}{a numeric describing the tolerance level for the search stopping rule. Specifically, the proportion of the metric (calculated from \code{object}).}

\item{lag}{an integer determining the lag/window length for the moving average of the selection metric. Default is 3.}
}
\value{
Depends on \code{return.model}: If \code{TRUE} then the \code{scampr} model fitted with the optimised basis function configuration. If \code{FALSE} then a data.frame with columns including- 'nodes': number used in scampr::simple_basis to create basis configuration. 'k': the number of basis functions. 'radius': the radius of the basis function configuration. 'll': the fitting marginal log-likelihood. 'BIC': the corresponding Bayesian Info. Crit. 'cpu': the computation time for the model fits. 'convergence': indicator for whether the model converged properly (0 = convergence).
}
\description{
This function takes in a scampr model and fits increasingly dense regular grids of basis functions (of the type created by \code{scampr::simple_basis}) to find an optimal basis function configuration according to either log-likelihood, AIC or BIC.
}
\examples{
#' # Get the gorilla nesting data
dat_pa <- flora$pa

# Fit an IPP model to the point pattern
m <- scampr(sp1 ~ MNT, dat_pa, include.sre = F, model.type = "PA")
 \dontrun{
# perform search
res <- basis.search(m)
}
}
