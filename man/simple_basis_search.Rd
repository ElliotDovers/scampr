% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simple_basis_search.R
\name{simple_basis_search}
\alias{simple_basis_search}
\title{Search algorithim for simple 2D basis functions configurations on scampr models}
\usage{
simple_basis_search(
  scampr.model,
  po.fold.id,
  pa.fold.id,
  max.basis.functions,
  radius.type = c("diag", "limiting"),
  domain.data,
  loglik.type = c("laplace", "variational", "both"),
  trunc.pa.prob = 1e-07
)
}
\arguments{
\item{scampr.model}{a scampr model: object of class 'scampr' that provides the framework for the search alogrithm. Recommended that an IPP model of the appropriate type is used.}

\item{po.fold.id}{Optional for cross-validation. An integer or factor vector the same length as the po.data that describes the CV fold that each location falls into.}

\item{pa.fold.id}{Optional for cross-validation. An integer or factor vector the same length as the pa.data that describes the CV fold that each location falls into.}

\item{max.basis.functions}{Optional. An integer describing a rough upper limit to the number of basis functions to search. Defaults to half the number of presences in the data sets.}

\item{radius.type}{a character string describing the type of radius length to use. One of 'diag' = diagonal dist. between nodes or 'limiting' = sqrt(Domain Area)/log(k).}

\item{domain.data}{Optional. A data frame of columns 'coord.names' that contains at least the extremities of the domain of interest. Useful to ensure the same basis function configurations are created by 'simple_basis' if comparing to various searches.}

\item{loglik.type}{a charater string indicating the type of approximation to use for the intractible marginalisation. One of 'variational', 'laplace' or 'both'. Currently variational (and hence both) is only available to PO models.}

\item{trunc.pa.prob}{Optional. A small positve number by which the predicted probability of presence is truncated. This can be used to ensure infinite values are avoiding within the cross-validation.}
}
\value{
a data.frame with columns including- 'nodes.on.long.edge': number used in scampr::simple_basis to create basis configuration. 'bf': the number of basis functions. 'loglik': the fitting marginal log-likelihood. 'aic': the corresponding AIC. Optionally, 'predicted_cll_po': the conditional (on the latent field) Presence-only likelihood. 'predicted_cll_pa': the conditional (on the latent field) Presence/Absence likelihood. 'roc_auc': Area under the ROC curve on the Presence/Absence data. Optional columns are the results from a cross-validation described by 'po.fold.id' and/or 'pa.fold.id'. (_va or _lp subscript for approx. type if both are calculated).
}
\description{
This function takes in a scampr model (ipp, lgcp, po, pa, popa) and calculates likelihoods and AIC for increasingly dense regular grids of basis functions (of the type created by scampr::simple_basis). The algorithm starts with an IPP (i.e. zero basis functions) and increases to <= 'max.basis.functions'. If 'po.fold.id' and/or 'pa.fold.id' are supplied then the function will perform a k-fold hold-one-out cross validation to calculate out-of-sample likelihoods (conditional on the latent field).
}
\examples{
#' # Get the gorilla nesting data
dat <- gorillas

# Standardise the elevation covariate
dat$elev.std <- scale(dat$elevation)

# Fit an IPP model to the point pattern
m.ipp <- scampr(pres ~ elev.std, data = dat, model.type = "ipp")
 \dontrun{
# Search through an increasingly dense regular grid of basis functions
res <- simple_basis_search(m.ipp)
}
}
